<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: public.proto

namespace App\Storage\Pilosa\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>GroupCount</code>
 */
class GroupCount extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .FieldRow Group = 1;</code>
     */
    private $Group;
    /**
     * Generated from protobuf field <code>uint64 Count = 2;</code>
     */
    protected $Count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \App\Storage\Pilosa\Proto\FieldRow[]|\Google\Protobuf\Internal\RepeatedField $Group
     *     @type int|string $Count
     * }
     */
    public function __construct($data = NULL) {
        \App\Storage\Pilosa\Proto\GPBMetadata\PBPublic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .FieldRow Group = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGroup()
    {
        return $this->Group;
    }

    /**
     * Generated from protobuf field <code>repeated .FieldRow Group = 1;</code>
     * @param \App\Storage\Pilosa\Proto\FieldRow[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGroup($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \App\Storage\Pilosa\Proto\FieldRow::class);
        $this->Group = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 Count = 2;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->Count;
    }

    /**
     * Generated from protobuf field <code>uint64 Count = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->Count = $var;

        return $this;
    }

}

